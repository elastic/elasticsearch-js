[[reference-slm]]
== client.slm

////////
===========================================================================================================================
||                                                                                                                       ||
||                                                                                                                       ||
||                                                                                                                       ||
||        ██████╗ ███████╗ █████╗ ██████╗ ███╗   ███╗███████╗                                                            ||
||        ██╔══██╗██╔════╝██╔══██╗██╔══██╗████╗ ████║██╔════╝                                                            ||
||        ██████╔╝█████╗  ███████║██║  ██║██╔████╔██║█████╗                                                              ||
||        ██╔══██╗██╔══╝  ██╔══██║██║  ██║██║╚██╔╝██║██╔══╝                                                              ||
||        ██║  ██║███████╗██║  ██║██████╔╝██║ ╚═╝ ██║███████╗                                                            ||
||        ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚═╝     ╚═╝╚══════╝                                                            ||
||                                                                                                                       ||
||                                                                                                                       ||
||    This file is autogenerated, DO NOT send pull requests that changes this file directly.                             ||
||    You should update the script that does the generation, which can be found in:                                      ||
||    https://github.com/elastic/elastic-client-generator-js                                                             ||
||                                                                                                                       ||
||    You can run the script with the following command:                                                                 ||
||       npm run elasticsearch -- --version <version>                                                                    ||
||                                                                                                                       ||
||                                                                                                                       ||
||                                                                                                                       ||
===========================================================================================================================
////////
++++
<style>
.lang-ts a.xref {
  text-decoration: underline !important;
}
</style>
++++


[discrete]
[[client.slm.deleteLifecycle]]
== `client.slm.deleteLifecycle()`

Deletes an existing snapshot lifecycle policy.

{ref}/slm-api-delete-policy.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: SlmDeleteLifecycleRequest, options?: TransportRequestOptions) => Promise<SlmDeleteLifecycleResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface SlmDeleteLifecycleRequest extends <<RequestBase>> {
  policy_id: <<Name>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type SlmDeleteLifecycleResponse = <<AcknowledgedResponseBase>>

----


[discrete]
[[client.slm.executeLifecycle]]
== `client.slm.executeLifecycle()`

Immediately creates a snapshot according to the lifecycle policy, without waiting for the scheduled time.

{ref}/slm-api-execute-lifecycle.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: SlmExecuteLifecycleRequest, options?: TransportRequestOptions) => Promise<SlmExecuteLifecycleResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface SlmExecuteLifecycleRequest extends <<RequestBase>> {
  policy_id: <<Name>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
interface SlmExecuteLifecycleResponse {
  snapshot_name: <<Name>>
}

----


[discrete]
[[client.slm.executeRetention]]
== `client.slm.executeRetention()`

Deletes any snapshots that are expired according to the policy's retention rules.

{ref}/slm-api-execute-retention.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: SlmExecuteRetentionRequest, options?: TransportRequestOptions) => Promise<SlmExecuteRetentionResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface SlmExecuteRetentionRequest extends <<RequestBase>> {}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type SlmExecuteRetentionResponse = <<AcknowledgedResponseBase>>

----


[discrete]
[[client.slm.getLifecycle]]
== `client.slm.getLifecycle()`

Retrieves one or more snapshot lifecycle policy definitions and information about the latest snapshot attempts.

{ref}/slm-api-get-policy.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: SlmGetLifecycleRequest, options?: TransportRequestOptions) => Promise<SlmGetLifecycleResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface SlmGetLifecycleRequest extends <<RequestBase>> {
  policy_id?: <<Names>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type SlmGetLifecycleResponse = Record<<<Id>>, <<SlmSnapshotLifecycle>>>

----


[discrete]
[[client.slm.getStats]]
== `client.slm.getStats()`

Returns global and policy-level statistics about actions taken by snapshot lifecycle management.

{ref}/slm-api-get-stats.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: SlmGetStatsRequest, options?: TransportRequestOptions) => Promise<SlmGetStatsResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface SlmGetStatsRequest extends <<RequestBase>> {}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
interface SlmGetStatsResponse {
  retention_deletion_time: <<Duration>>
  retention_deletion_time_millis: <<DurationValue>><<<UnitMillis>>>
  retention_failed: <<long>>
  retention_runs: <<long>>
  retention_timed_out: <<long>>
  total_snapshots_deleted: <<long>>
  total_snapshot_deletion_failures: <<long>>
  total_snapshots_failed: <<long>>
  total_snapshots_taken: <<long>>
  policy_stats: string[]
}

----


[discrete]
[[client.slm.getStatus]]
== `client.slm.getStatus()`

Retrieves the status of snapshot lifecycle management (SLM).

{ref}/slm-api-get-status.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: SlmGetStatusRequest, options?: TransportRequestOptions) => Promise<SlmGetStatusResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface SlmGetStatusRequest extends <<RequestBase>> {}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
interface SlmGetStatusResponse {
  operation_mode: <<LifecycleOperationMode>>
}

----


[discrete]
[[client.slm.putLifecycle]]
== `client.slm.putLifecycle()`

Creates or updates a snapshot lifecycle policy.

{ref}/slm-api-put-policy.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: SlmPutLifecycleRequest, options?: TransportRequestOptions) => Promise<SlmPutLifecycleResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface SlmPutLifecycleRequest extends <<RequestBase>> {
  policy_id: <<Name>>
  master_timeout?: <<Duration>>
  timeout?: <<Duration>>
  config?: <<SlmConfiguration>>
  name?: <<Name>>
  repository?: string
  retention?: <<SlmRetention>>
  schedule?: <<WatcherCronExpression>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type SlmPutLifecycleResponse = <<AcknowledgedResponseBase>>

----


[discrete]
[[client.slm.start]]
== `client.slm.start()`

Turns on snapshot lifecycle management (SLM).

{ref}/slm-api-start.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: SlmStartRequest, options?: TransportRequestOptions) => Promise<SlmStartResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface SlmStartRequest extends <<RequestBase>> {}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type SlmStartResponse = <<AcknowledgedResponseBase>>

----


[discrete]
[[client.slm.stop]]
== `client.slm.stop()`

Turns off snapshot lifecycle management (SLM).

{ref}/slm-api-stop.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: SlmStopRequest, options?: TransportRequestOptions) => Promise<SlmStopResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface SlmStopRequest extends <<RequestBase>> {}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type SlmStopResponse = <<AcknowledgedResponseBase>>

----


