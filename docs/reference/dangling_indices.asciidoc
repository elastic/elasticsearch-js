[[reference-dangling_indices]]
== client.danglingIndices

////////
===========================================================================================================================
||                                                                                                                       ||
||                                                                                                                       ||
||                                                                                                                       ||
||        ██████╗ ███████╗ █████╗ ██████╗ ███╗   ███╗███████╗                                                            ||
||        ██╔══██╗██╔════╝██╔══██╗██╔══██╗████╗ ████║██╔════╝                                                            ||
||        ██████╔╝█████╗  ███████║██║  ██║██╔████╔██║█████╗                                                              ||
||        ██╔══██╗██╔══╝  ██╔══██║██║  ██║██║╚██╔╝██║██╔══╝                                                              ||
||        ██║  ██║███████╗██║  ██║██████╔╝██║ ╚═╝ ██║███████╗                                                            ||
||        ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚═╝     ╚═╝╚══════╝                                                            ||
||                                                                                                                       ||
||                                                                                                                       ||
||    This file is autogenerated, DO NOT send pull requests that changes this file directly.                             ||
||    You should update the script that does the generation, which can be found in:                                      ||
||    https://github.com/elastic/elastic-client-generator-js                                                             ||
||                                                                                                                       ||
||    You can run the script with the following command:                                                                 ||
||       npm run elasticsearch -- --version <version>                                                                    ||
||                                                                                                                       ||
||                                                                                                                       ||
||                                                                                                                       ||
===========================================================================================================================
////////
++++
<style>
.lang-ts a.xref {
  text-decoration: underline !important;
}
</style>
++++


[discrete]
[[client.danglingIndices.deleteDanglingIndex]]
== `client.danglingIndices.deleteDanglingIndex()`

Delete a dangling index. If Elasticsearch encounters index data that is absent from the current cluster state, those indices are considered to be dangling. For example, this can happen if you delete more than `cluster.indices.tombstones.size` indices while an Elasticsearch node is offline.

{ref}/modules-gateway-dangling-indices.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: DanglingIndicesDeleteDanglingIndexRequest, options?: TransportRequestOptions) => Promise<DanglingIndicesDeleteDanglingIndexResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface DanglingIndicesDeleteDanglingIndexRequest extends <<RequestBase>> {
  index_uuid: <<Uuid>>
  accept_data_loss: boolean
  master_timeout?: <<Duration>>
  timeout?: <<Duration>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type DanglingIndicesDeleteDanglingIndexResponse = <<AcknowledgedResponseBase>>

----


[discrete]
[[client.danglingIndices.importDanglingIndex]]
== `client.danglingIndices.importDanglingIndex()`

Import a dangling index. If Elasticsearch encounters index data that is absent from the current cluster state, those indices are considered to be dangling. For example, this can happen if you delete more than `cluster.indices.tombstones.size` indices while an Elasticsearch node is offline.

{ref}/modules-gateway-dangling-indices.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: DanglingIndicesImportDanglingIndexRequest, options?: TransportRequestOptions) => Promise<DanglingIndicesImportDanglingIndexResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface DanglingIndicesImportDanglingIndexRequest extends <<RequestBase>> {
  index_uuid: <<Uuid>>
  accept_data_loss: boolean
  master_timeout?: <<Duration>>
  timeout?: <<Duration>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type DanglingIndicesImportDanglingIndexResponse = <<AcknowledgedResponseBase>>

----


[discrete]
[[client.danglingIndices.listDanglingIndices]]
== `client.danglingIndices.listDanglingIndices()`

Get the dangling indices. If Elasticsearch encounters index data that is absent from the current cluster state, those indices are considered to be dangling. For example, this can happen if you delete more than `cluster.indices.tombstones.size` indices while an Elasticsearch node is offline. Use this API to list dangling indices, which you can then import or delete.

{ref}/modules-gateway-dangling-indices.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: DanglingIndicesListDanglingIndicesRequest, options?: TransportRequestOptions) => Promise<DanglingIndicesListDanglingIndicesResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface DanglingIndicesListDanglingIndicesRequest extends <<RequestBase>> {}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
interface DanglingIndicesListDanglingIndicesResponse {
  dangling_indices: DanglingIndicesListDanglingIndicesDanglingIndex[]
}

----


