[[reference-rollup]]
== client.rollup

////////
===========================================================================================================================
||                                                                                                                       ||
||                                                                                                                       ||
||                                                                                                                       ||
||        ██████╗ ███████╗ █████╗ ██████╗ ███╗   ███╗███████╗                                                            ||
||        ██╔══██╗██╔════╝██╔══██╗██╔══██╗████╗ ████║██╔════╝                                                            ||
||        ██████╔╝█████╗  ███████║██║  ██║██╔████╔██║█████╗                                                              ||
||        ██╔══██╗██╔══╝  ██╔══██║██║  ██║██║╚██╔╝██║██╔══╝                                                              ||
||        ██║  ██║███████╗██║  ██║██████╔╝██║ ╚═╝ ██║███████╗                                                            ||
||        ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚═╝     ╚═╝╚══════╝                                                            ||
||                                                                                                                       ||
||                                                                                                                       ||
||    This file is autogenerated, DO NOT send pull requests that changes this file directly.                             ||
||    You should update the script that does the generation, which can be found in:                                      ||
||    https://github.com/elastic/elastic-client-generator-js                                                             ||
||                                                                                                                       ||
||    You can run the script with the following command:                                                                 ||
||       npm run elasticsearch -- --version <version>                                                                    ||
||                                                                                                                       ||
||                                                                                                                       ||
||                                                                                                                       ||
===========================================================================================================================
////////
++++
<style>
.lang-ts a.xref {
  text-decoration: underline !important;
}
</style>
++++


[discrete]
[[client.rollup.deleteJob]]
== `client.rollup.deleteJob()`

Deletes an existing rollup job.

{ref}/rollup-delete-job.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: RollupDeleteJobRequest, options?: TransportRequestOptions) => Promise<RollupDeleteJobResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface RollupDeleteJobRequest extends <<RequestBase>> {
  id: <<Id>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
interface RollupDeleteJobResponse {
  acknowledged: boolean
  task_failures?: <<TaskFailure>>[]
}

----


[discrete]
[[client.rollup.getJobs]]
== `client.rollup.getJobs()`

Retrieves the configuration, stats, and status of rollup jobs.

{ref}/rollup-get-job.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: RollupGetJobsRequest, options?: TransportRequestOptions) => Promise<RollupGetJobsResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface RollupGetJobsRequest extends <<RequestBase>> {
  id?: <<Id>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
interface RollupGetJobsResponse {
  jobs: RollupGetJobsRollupJob[]
}

----


[discrete]
[[client.rollup.getRollupCaps]]
== `client.rollup.getRollupCaps()`

Returns the capabilities of any rollup jobs that have been configured for a specific index or index pattern.

{ref}/rollup-get-rollup-caps.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: RollupGetRollupCapsRequest, options?: TransportRequestOptions) => Promise<RollupGetRollupCapsResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface RollupGetRollupCapsRequest extends <<RequestBase>> {
  id?: <<Id>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type RollupGetRollupCapsResponse = Record<<<IndexName>>, RollupGetRollupCapsRollupCapabilities>

----


[discrete]
[[client.rollup.getRollupIndexCaps]]
== `client.rollup.getRollupIndexCaps()`

Returns the rollup capabilities of all jobs inside of a rollup index (for example, the index where rollup data is stored).

{ref}/rollup-get-rollup-index-caps.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: RollupGetRollupIndexCapsRequest, options?: TransportRequestOptions) => Promise<RollupGetRollupIndexCapsResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface RollupGetRollupIndexCapsRequest extends <<RequestBase>> {
  index: <<Ids>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type RollupGetRollupIndexCapsResponse = Record<<<IndexName>>, RollupGetRollupIndexCapsIndexCapabilities>

----


[discrete]
[[client.rollup.putJob]]
== `client.rollup.putJob()`

Creates a rollup job.

{ref}/rollup-put-job.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: RollupPutJobRequest, options?: TransportRequestOptions) => Promise<RollupPutJobResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface RollupPutJobRequest extends <<RequestBase>> {
  id: <<Id>>
  cron: string
  groups: <<RollupGroupings>>
  index_pattern: string
  metrics?: <<RollupFieldMetric>>[]
  page_size: <<integer>>
  rollup_index: <<IndexName>>
  timeout?: <<Duration>>
  headers?: <<HttpHeaders>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type RollupPutJobResponse = <<AcknowledgedResponseBase>>

----


[discrete]
[[client.rollup.rollupSearch]]
== `client.rollup.rollupSearch()`

Enables searching rolled-up data using the standard Query DSL.

{ref}/rollup-search.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: RollupRollupSearchRequest, options?: TransportRequestOptions) => Promise<RollupRollupSearchResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface RollupRollupSearchRequest extends <<RequestBase>> {
  index: <<Indices>>
  rest_total_hits_as_int?: boolean
  typed_keys?: boolean
  aggregations?: Record<string, <<AggregationsAggregationContainer>>>
  pass:[/**] @alias aggregations */
  aggs?: Record<string, <<AggregationsAggregationContainer>>>
  query?: <<QueryDslQueryContainer>>
  size?: <<integer>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
interface RollupRollupSearchResponse<TDocument = unknown, TAggregations = Record<<<AggregateName>>, <<AggregationsAggregate>>>> {
  took: <<long>>
  timed_out: boolean
  terminated_early?: boolean
  _shards: <<ShardStatistics>>
  hits: <<SearchHitsMetadata>><TDocument>
  aggregations?: TAggregations
}

----


[discrete]
[[client.rollup.startJob]]
== `client.rollup.startJob()`

Starts an existing, stopped rollup job.

{ref}/rollup-start-job.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: RollupStartJobRequest, options?: TransportRequestOptions) => Promise<RollupStartJobResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface RollupStartJobRequest extends <<RequestBase>> {
  id: <<Id>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
interface RollupStartJobResponse {
  started: boolean
}

----


[discrete]
[[client.rollup.stopJob]]
== `client.rollup.stopJob()`

Stops an existing, started rollup job.

{ref}/rollup-stop-job.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: RollupStopJobRequest, options?: TransportRequestOptions) => Promise<RollupStopJobResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface RollupStopJobRequest extends <<RequestBase>> {
  id: <<Id>>
  timeout?: <<Duration>>
  wait_for_completion?: boolean
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
interface RollupStopJobResponse {
  stopped: boolean
}

----


