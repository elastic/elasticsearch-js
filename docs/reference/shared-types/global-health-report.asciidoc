[[reference-shared-types-global-health-report]]

=== `HealthReport` request types

////////
===========================================================================================================================
||                                                                                                                       ||
||                                                                                                                       ||
||                                                                                                                       ||
||        ██████╗ ███████╗ █████╗ ██████╗ ███╗   ███╗███████╗                                                            ||
||        ██╔══██╗██╔════╝██╔══██╗██╔══██╗████╗ ████║██╔════╝                                                            ||
||        ██████╔╝█████╗  ███████║██║  ██║██╔████╔██║█████╗                                                              ||
||        ██╔══██╗██╔══╝  ██╔══██║██║  ██║██║╚██╔╝██║██╔══╝                                                              ||
||        ██║  ██║███████╗██║  ██║██████╔╝██║ ╚═╝ ██║███████╗                                                            ||
||        ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚═╝     ╚═╝╚══════╝                                                            ||
||                                                                                                                       ||
||                                                                                                                       ||
||    This file is autogenerated, DO NOT send pull requests that changes this file directly.                             ||
||    You should update the script that does the generation, which can be found in:                                      ||
||    https://github.com/elastic/elastic-client-generator-js                                                             ||
||                                                                                                                       ||
||    You can run the script with the following command:                                                                 ||
||       npm run elasticsearch -- --version <version>                                                                    ||
||                                                                                                                       ||
||                                                                                                                       ||
||                                                                                                                       ||
===========================================================================================================================
////////
++++
<style>
.lang-ts a.xref {
  text-decoration: underline !important;
}
</style>
++++


[discrete]
[[HealthReportBaseIndicator]]
==== HealthReportBaseIndicator

[source,ts,subs=+macros]
----
interface HealthReportBaseIndicator {
  status: <<HealthReportIndicatorHealthStatus>>
  symptom: string
  impacts?: <<HealthReportImpact>>[]
  diagnosis?: <<HealthReportDiagnosis>>[]
}
----


[discrete]
[[HealthReportDataStreamLifecycleDetails]]
==== HealthReportDataStreamLifecycleDetails

[source,ts,subs=+macros]
----
interface HealthReportDataStreamLifecycleDetails {
  stagnating_backing_indices_count: <<integer>>
  total_backing_indices_in_error: <<integer>>
  stagnating_backing_indices?: <<HealthReportStagnatingBackingIndices>>[]
}
----


[discrete]
[[HealthReportDataStreamLifecycleIndicator]]
==== HealthReportDataStreamLifecycleIndicator

[source,ts,subs=+macros]
----
interface HealthReportDataStreamLifecycleIndicator extends <<HealthReportBaseIndicator>> {
  details?: <<HealthReportDataStreamLifecycleDetails>>
}
----


[discrete]
[[HealthReportDiagnosis]]
==== HealthReportDiagnosis

[source,ts,subs=+macros]
----
interface HealthReportDiagnosis {
  id: string
  action: string
  affected_resources: <<HealthReportDiagnosisAffectedResources>>
  cause: string
  help_url: string
}
----


[discrete]
[[HealthReportDiagnosisAffectedResources]]
==== HealthReportDiagnosisAffectedResources

[source,ts,subs=+macros]
----
interface HealthReportDiagnosisAffectedResources {
  indices?: <<Indices>>
  nodes?: <<HealthReportIndicatorNode>>[]
  slm_policies?: string[]
  feature_states?: string[]
  snapshot_repositories?: string[]
}
----


[discrete]
[[HealthReportDiskIndicator]]
==== HealthReportDiskIndicator

[source,ts,subs=+macros]
----
interface HealthReportDiskIndicator extends <<HealthReportBaseIndicator>> {
  details?: <<HealthReportDiskIndicatorDetails>>
}
----


[discrete]
[[HealthReportDiskIndicatorDetails]]
==== HealthReportDiskIndicatorDetails

[source,ts,subs=+macros]
----
interface HealthReportDiskIndicatorDetails {
  indices_with_readonly_block: <<long>>
  nodes_with_enough_disk_space: <<long>>
  nodes_over_high_watermark: <<long>>
  nodes_over_flood_stage_watermark: <<long>>
  nodes_with_unknown_disk_status: <<long>>
}
----


[discrete]
[[HealthReportFileSettingsIndicator]]
==== HealthReportFileSettingsIndicator

[source,ts,subs=+macros]
----
interface HealthReportFileSettingsIndicator extends <<HealthReportBaseIndicator>> {
  details?: <<HealthReportFileSettingsIndicatorDetails>>
}
----


[discrete]
[[HealthReportFileSettingsIndicatorDetails]]
==== HealthReportFileSettingsIndicatorDetails

[source,ts,subs=+macros]
----
interface HealthReportFileSettingsIndicatorDetails {
  failure_streak: <<long>>
  most_recent_failure: string
}
----


[discrete]
[[HealthReportIlmIndicator]]
==== HealthReportIlmIndicator

[source,ts,subs=+macros]
----
interface HealthReportIlmIndicator extends <<HealthReportBaseIndicator>> {
  details?: <<HealthReportIlmIndicatorDetails>>
}
----


[discrete]
[[HealthReportIlmIndicatorDetails]]
==== HealthReportIlmIndicatorDetails

[source,ts,subs=+macros]
----
interface HealthReportIlmIndicatorDetails {
  ilm_status: <<LifecycleOperationMode>>
  policies: <<long>>
  stagnating_indices: <<integer>>
}
----


[discrete]
[[HealthReportImpact]]
==== HealthReportImpact

[source,ts,subs=+macros]
----
interface HealthReportImpact {
  description: string
  id: string
  impact_areas: <<HealthReportImpactArea>>[]
  severity: <<integer>>
}
----


[discrete]
[[HealthReportImpactArea]]
==== HealthReportImpactArea

[source,ts,subs=+macros]
----
type HealthReportImpactArea = 'search' | 'ingest' | 'backup' | 'deployment_management'
----


[discrete]
[[HealthReportIndicatorHealthStatus]]
==== HealthReportIndicatorHealthStatus

[source,ts,subs=+macros]
----
type HealthReportIndicatorHealthStatus = 'green' | 'yellow' | 'red' | 'unknown'
----


[discrete]
[[HealthReportIndicatorNode]]
==== HealthReportIndicatorNode

[source,ts,subs=+macros]
----
interface HealthReportIndicatorNode {
  name: string | null
  node_id: string | null
}
----


[discrete]
[[HealthReportIndicators]]
==== HealthReportIndicators

[source,ts,subs=+macros]
----
interface HealthReportIndicators {
  master_is_stable?: <<HealthReportMasterIsStableIndicator>>
  shards_availability?: <<HealthReportShardsAvailabilityIndicator>>
  disk?: <<HealthReportDiskIndicator>>
  repository_integrity?: <<HealthReportRepositoryIntegrityIndicator>>
  data_stream_lifecycle?: <<HealthReportDataStreamLifecycleIndicator>>
  ilm?: <<HealthReportIlmIndicator>>
  slm?: <<HealthReportSlmIndicator>>
  shards_capacity?: <<HealthReportShardsCapacityIndicator>>
  file_settings?: <<HealthReportFileSettingsIndicator>>
}
----


[discrete]
[[HealthReportMasterIsStableIndicator]]
==== HealthReportMasterIsStableIndicator

[source,ts,subs=+macros]
----
interface HealthReportMasterIsStableIndicator extends <<HealthReportBaseIndicator>> {
  details?: <<HealthReportMasterIsStableIndicatorDetails>>
}
----


[discrete]
[[HealthReportMasterIsStableIndicatorClusterFormationNode]]
==== HealthReportMasterIsStableIndicatorClusterFormationNode

[source,ts,subs=+macros]
----
interface HealthReportMasterIsStableIndicatorClusterFormationNode {
  name?: string
  node_id: string
  cluster_formation_message: string
}
----


[discrete]
[[HealthReportMasterIsStableIndicatorDetails]]
==== HealthReportMasterIsStableIndicatorDetails

[source,ts,subs=+macros]
----
interface HealthReportMasterIsStableIndicatorDetails {
  current_master: <<HealthReportIndicatorNode>>
  recent_masters: <<HealthReportIndicatorNode>>[]
  exception_fetching_history?: <<HealthReportMasterIsStableIndicatorExceptionFetchingHistory>>
  cluster_formation?: <<HealthReportMasterIsStableIndicatorClusterFormationNode>>[]
}
----


[discrete]
[[HealthReportMasterIsStableIndicatorExceptionFetchingHistory]]
==== HealthReportMasterIsStableIndicatorExceptionFetchingHistory

[source,ts,subs=+macros]
----
interface HealthReportMasterIsStableIndicatorExceptionFetchingHistory {
  message: string
  stack_trace: string
}
----


[discrete]
[[HealthReportRepositoryIntegrityIndicator]]
==== HealthReportRepositoryIntegrityIndicator

[source,ts,subs=+macros]
----
interface HealthReportRepositoryIntegrityIndicator extends <<HealthReportBaseIndicator>> {
  details?: <<HealthReportRepositoryIntegrityIndicatorDetails>>
}
----


[discrete]
[[HealthReportRepositoryIntegrityIndicatorDetails]]
==== HealthReportRepositoryIntegrityIndicatorDetails

[source,ts,subs=+macros]
----
interface HealthReportRepositoryIntegrityIndicatorDetails {
  total_repositories?: <<long>>
  corrupted_repositories?: <<long>>
  corrupted?: string[]
}
----


[discrete]
[[HealthReportRequest]]
==== HealthReportRequest

[source,ts,subs=+macros]
----
interface HealthReportRequest extends <<RequestBase>> {
  feature?: string | string[]
  timeout?: <<Duration>>
  verbose?: boolean
  size?: <<integer>>
}
----


[discrete]
[[HealthReportResponse]]
==== HealthReportResponse

[source,ts,subs=+macros]
----
interface HealthReportResponse {
  cluster_name: string
  indicators: <<HealthReportIndicators>>
  status?: <<HealthReportIndicatorHealthStatus>>
}
----


[discrete]
[[HealthReportShardsAvailabilityIndicator]]
==== HealthReportShardsAvailabilityIndicator

[source,ts,subs=+macros]
----
interface HealthReportShardsAvailabilityIndicator extends <<HealthReportBaseIndicator>> {
  details?: <<HealthReportShardsAvailabilityIndicatorDetails>>
}
----


[discrete]
[[HealthReportShardsAvailabilityIndicatorDetails]]
==== HealthReportShardsAvailabilityIndicatorDetails

[source,ts,subs=+macros]
----
interface HealthReportShardsAvailabilityIndicatorDetails {
  creating_primaries: <<long>>
  creating_replicas: <<long>>
  initializing_primaries: <<long>>
  initializing_replicas: <<long>>
  restarting_primaries: <<long>>
  restarting_replicas: <<long>>
  started_primaries: <<long>>
  started_replicas: <<long>>
  unassigned_primaries: <<long>>
  unassigned_replicas: <<long>>
}
----


[discrete]
[[HealthReportShardsCapacityIndicator]]
==== HealthReportShardsCapacityIndicator

[source,ts,subs=+macros]
----
interface HealthReportShardsCapacityIndicator extends <<HealthReportBaseIndicator>> {
  details?: <<HealthReportShardsCapacityIndicatorDetails>>
}
----


[discrete]
[[HealthReportShardsCapacityIndicatorDetails]]
==== HealthReportShardsCapacityIndicatorDetails

[source,ts,subs=+macros]
----
interface HealthReportShardsCapacityIndicatorDetails {
  data: <<HealthReportShardsCapacityIndicatorTierDetail>>
  frozen: <<HealthReportShardsCapacityIndicatorTierDetail>>
}
----


[discrete]
[[HealthReportShardsCapacityIndicatorTierDetail]]
==== HealthReportShardsCapacityIndicatorTierDetail

[source,ts,subs=+macros]
----
interface HealthReportShardsCapacityIndicatorTierDetail {
  max_shards_in_cluster: <<integer>>
  current_used_shards?: <<integer>>
}
----


[discrete]
[[HealthReportSlmIndicator]]
==== HealthReportSlmIndicator

[source,ts,subs=+macros]
----
interface HealthReportSlmIndicator extends <<HealthReportBaseIndicator>> {
  details?: <<HealthReportSlmIndicatorDetails>>
}
----


[discrete]
[[HealthReportSlmIndicatorDetails]]
==== HealthReportSlmIndicatorDetails

[source,ts,subs=+macros]
----
interface HealthReportSlmIndicatorDetails {
  slm_status: <<LifecycleOperationMode>>
  policies: <<long>>
  unhealthy_policies?: <<HealthReportSlmIndicatorUnhealthyPolicies>>
}
----


[discrete]
[[HealthReportSlmIndicatorUnhealthyPolicies]]
==== HealthReportSlmIndicatorUnhealthyPolicies

[source,ts,subs=+macros]
----
interface HealthReportSlmIndicatorUnhealthyPolicies {
  count: <<long>>
  invocations_since_last_success?: Record<string, <<long>>>
}
----


[discrete]
[[HealthReportStagnatingBackingIndices]]
==== HealthReportStagnatingBackingIndices

[source,ts,subs=+macros]
----
interface HealthReportStagnatingBackingIndices {
  index_name: <<IndexName>>
  first_occurrence_timestamp: <<long>>
  retry_count: <<integer>>
}
----


