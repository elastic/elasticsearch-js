[[reference-shared-types-inference-types]]

=== `Inference` types

////////
===========================================================================================================================
||                                                                                                                       ||
||                                                                                                                       ||
||                                                                                                                       ||
||        ██████╗ ███████╗ █████╗ ██████╗ ███╗   ███╗███████╗                                                            ||
||        ██╔══██╗██╔════╝██╔══██╗██╔══██╗████╗ ████║██╔════╝                                                            ||
||        ██████╔╝█████╗  ███████║██║  ██║██╔████╔██║█████╗                                                              ||
||        ██╔══██╗██╔══╝  ██╔══██║██║  ██║██║╚██╔╝██║██╔══╝                                                              ||
||        ██║  ██║███████╗██║  ██║██████╔╝██║ ╚═╝ ██║███████╗                                                            ||
||        ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚═╝     ╚═╝╚══════╝                                                            ||
||                                                                                                                       ||
||                                                                                                                       ||
||    This file is autogenerated, DO NOT send pull requests that changes this file directly.                             ||
||    You should update the script that does the generation, which can be found in:                                      ||
||    https://github.com/elastic/elastic-client-generator-js                                                             ||
||                                                                                                                       ||
||    You can run the script with the following command:                                                                 ||
||       npm run elasticsearch -- --version <version>                                                                    ||
||                                                                                                                       ||
||                                                                                                                       ||
||                                                                                                                       ||
===========================================================================================================================
////////
++++
<style>
.lang-ts a.xref {
  text-decoration: underline !important;
}
</style>
++++


[discrete]
[[InferenceCompletionResult]]
=== InferenceCompletionResult

[source,ts,subs=+macros]
----
interface InferenceCompletionResult {
  result: string
}
----


[discrete]
[[InferenceDeleteInferenceEndpointResult]]
=== InferenceDeleteInferenceEndpointResult

[source,ts,subs=+macros]
----
interface InferenceDeleteInferenceEndpointResult extends <<AcknowledgedResponseBase>> {
  pipelines: string[]
}
----


[discrete]
[[InferenceDenseByteVector]]
=== InferenceDenseByteVector

[source,ts,subs=+macros]
----
type InferenceDenseByteVector = <<byte>>[]
----


[discrete]
[[InferenceDenseVector]]
=== InferenceDenseVector

[source,ts,subs=+macros]
----
type InferenceDenseVector = <<float>>[]
----


[discrete]
[[InferenceInferenceEndpoint]]
=== InferenceInferenceEndpoint

[source,ts,subs=+macros]
----
interface InferenceInferenceEndpoint {
  pass:[/**] @property service The service type */
  service: string
  pass:[/**] @property service_settings Settings specific to the service */
  service_settings: <<InferenceServiceSettings>>
  pass:[/**] @property task_settings Task settings specific to the service and task type */
  task_settings?: <<InferenceTaskSettings>>
}
----


[discrete]
[[InferenceInferenceEndpointInfo]]
=== InferenceInferenceEndpointInfo

[source,ts,subs=+macros]
----
interface InferenceInferenceEndpointInfo extends <<InferenceInferenceEndpoint>> {
  pass:[/**] @property inference_id The inference <<Id>> */
  inference_id: string
  pass:[/**] @property task_type The task type */
  task_type: <<InferenceTaskType>>
}
----


[discrete]
[[InferenceInferenceResult]]
=== InferenceInferenceResult

[source,ts,subs=+macros]
----
interface InferenceInferenceResult {
  text_embedding_bytes?: <<InferenceTextEmbeddingByteResult>>[]
  text_embedding?: <<InferenceTextEmbeddingResult>>[]
  sparse_embedding?: <<InferenceSparseEmbeddingResult>>[]
  completion?: <<InferenceCompletionResult>>[]
  rerank?: <<InferenceRankedDocument>>[]
}
----


[discrete]
[[InferenceRankedDocument]]
=== InferenceRankedDocument

[source,ts,subs=+macros]
----
interface InferenceRankedDocument {
  index: <<integer>>
  score: <<float>>
  text?: string
}
----


[discrete]
[[InferenceServiceSettings]]
=== InferenceServiceSettings

[source,ts,subs=+macros]
----
type InferenceServiceSettings = any
----


[discrete]
[[InferenceSparseEmbeddingResult]]
=== InferenceSparseEmbeddingResult

[source,ts,subs=+macros]
----
interface InferenceSparseEmbeddingResult {
  embedding: <<InferenceSparseVector>>
}
----


[discrete]
[[InferenceSparseVector]]
=== InferenceSparseVector

[source,ts,subs=+macros]
----
type InferenceSparseVector = Record<string, <<float>>>
----


[discrete]
[[InferenceTaskSettings]]
=== InferenceTaskSettings

[source,ts,subs=+macros]
----
type InferenceTaskSettings = any
----


[discrete]
[[InferenceTaskType]]
=== InferenceTaskType

[source,ts,subs=+macros]
----
type InferenceTaskType = 'sparse_embedding' | 'text_embedding' | 'rerank' | 'completion'
----


[discrete]
[[InferenceTextEmbeddingByteResult]]
=== InferenceTextEmbeddingByteResult

[source,ts,subs=+macros]
----
interface InferenceTextEmbeddingByteResult {
  embedding: <<InferenceDenseByteVector>>
}
----


[discrete]
[[InferenceTextEmbeddingResult]]
=== InferenceTextEmbeddingResult

[source,ts,subs=+macros]
----
interface InferenceTextEmbeddingResult {
  embedding: <<InferenceDenseVector>>
}
----


