[[reference-shared-types-ilm-types]]

=== `Ilm` types

////////
===========================================================================================================================
||                                                                                                                       ||
||                                                                                                                       ||
||                                                                                                                       ||
||        ██████╗ ███████╗ █████╗ ██████╗ ███╗   ███╗███████╗                                                            ||
||        ██╔══██╗██╔════╝██╔══██╗██╔══██╗████╗ ████║██╔════╝                                                            ||
||        ██████╔╝█████╗  ███████║██║  ██║██╔████╔██║█████╗                                                              ||
||        ██╔══██╗██╔══╝  ██╔══██║██║  ██║██║╚██╔╝██║██╔══╝                                                              ||
||        ██║  ██║███████╗██║  ██║██████╔╝██║ ╚═╝ ██║███████╗                                                            ||
||        ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚═╝     ╚═╝╚══════╝                                                            ||
||                                                                                                                       ||
||                                                                                                                       ||
||    This file is autogenerated, DO NOT send pull requests that changes this file directly.                             ||
||    You should update the script that does the generation, which can be found in:                                      ||
||    https://github.com/elastic/elastic-client-generator-js                                                             ||
||                                                                                                                       ||
||    You can run the script with the following command:                                                                 ||
||       npm run elasticsearch -- --version <version>                                                                    ||
||                                                                                                                       ||
||                                                                                                                       ||
||                                                                                                                       ||
===========================================================================================================================
////////
++++
<style>
.lang-ts a.xref {
  text-decoration: underline !important;
}
</style>
++++


[discrete]
[[IlmActions]]
=== IlmActions

[source,ts,subs=+macros]
----
interface IlmActions {
  pass:[/**] @property allocate Phases allowed: warm, cold. */
  allocate?: <<IlmAllocateAction>>
  pass:[/**] @property delete Phases allowed: delete. */
  delete?: <<IlmDeleteAction>>
  pass:[/**] @property downsample Phases allowed: hot, warm, cold. */
  downsample?: <<IlmDownsampleAction>>
  pass:[/**] @property freeze The freeze action is a noop in 8.x */
  freeze?: <<EmptyObject>>
  pass:[/**] @property forcemerge Phases allowed: hot, warm. */
  forcemerge?: <<IlmForceMergeAction>>
  pass:[/**] @property migrate Phases allowed: warm, cold. */
  migrate?: <<IlmMigrateAction>>
  pass:[/**] @property readonly Phases allowed: hot, warm, cold. */
  readonly?: <<EmptyObject>>
  pass:[/**] @property rollover Phases allowed: hot. */
  rollover?: <<IlmRolloverAction>>
  pass:[/**] @property set_priority Phases allowed: hot, warm, cold. */
  set_priority?: <<IlmSetPriorityAction>>
  pass:[/**] @property searchable_snapshot Phases allowed: hot, cold, frozen. */
  searchable_snapshot?: <<IlmSearchableSnapshotAction>>
  pass:[/**] @property shrink Phases allowed: hot, warm. */
  shrink?: <<IlmShrinkAction>>
  pass:[/**] @property unfollow Phases allowed: hot, warm, cold, frozen. */
  unfollow?: <<EmptyObject>>
  pass:[/**] @property wait_for_snapshot Phases allowed: delete. */
  wait_for_snapshot?: <<IlmWaitForSnapshotAction>>
}
----


[discrete]
[[IlmAllocateAction]]
=== IlmAllocateAction

[source,ts,subs=+macros]
----
interface IlmAllocateAction {
  number_of_replicas?: <<integer>>
  total_shards_per_node?: <<integer>>
  include?: Record<string, string>
  exclude?: Record<string, string>
  require?: Record<string, string>
}
----


[discrete]
[[IlmDeleteAction]]
=== IlmDeleteAction

[source,ts,subs=+macros]
----
interface IlmDeleteAction {
  delete_searchable_snapshot?: boolean
}
----


[discrete]
[[IlmDownsampleAction]]
=== IlmDownsampleAction

[source,ts,subs=+macros]
----
interface IlmDownsampleAction {
  fixed_interval: <<DurationLarge>>
  wait_timeout?: <<Duration>>
}
----


[discrete]
[[IlmForceMergeAction]]
=== IlmForceMergeAction

[source,ts,subs=+macros]
----
interface IlmForceMergeAction {
  max_num_segments: <<integer>>
  index_codec?: string
}
----


[discrete]
[[IlmMigrateAction]]
=== IlmMigrateAction

[source,ts,subs=+macros]
----
interface IlmMigrateAction {
  enabled?: boolean
}
----


[discrete]
[[IlmPhase]]
=== IlmPhase

[source,ts,subs=+macros]
----
interface IlmPhase {
  actions?: <<IlmActions>>
  min_age?: <<Duration>> | <<long>>
}
----


[discrete]
[[IlmPhases]]
=== IlmPhases

[source,ts,subs=+macros]
----
interface IlmPhases {
  cold?: <<IlmPhase>>
  delete?: <<IlmPhase>>
  frozen?: <<IlmPhase>>
  hot?: <<IlmPhase>>
  warm?: <<IlmPhase>>
}
----


[discrete]
[[IlmPolicy]]
=== IlmPolicy

[source,ts,subs=+macros]
----
interface IlmPolicy {
  phases: <<IlmPhases>>
  _meta?: <<Metadata>>
}
----


[discrete]
[[IlmRolloverAction]]
=== IlmRolloverAction

[source,ts,subs=+macros]
----
interface IlmRolloverAction {
  max_size?: <<ByteSize>>
  max_primary_shard_size?: <<ByteSize>>
  max_age?: <<Duration>>
  max_docs?: <<long>>
  max_primary_shard_docs?: <<long>>
  min_size?: <<ByteSize>>
  min_primary_shard_size?: <<ByteSize>>
  min_age?: <<Duration>>
  min_docs?: <<long>>
  min_primary_shard_docs?: <<long>>
}
----


[discrete]
[[IlmSearchableSnapshotAction]]
=== IlmSearchableSnapshotAction

[source,ts,subs=+macros]
----
interface IlmSearchableSnapshotAction {
  snapshot_repository: string
  force_merge_index?: boolean
}
----


[discrete]
[[IlmSetPriorityAction]]
=== IlmSetPriorityAction

[source,ts,subs=+macros]
----
interface IlmSetPriorityAction {
  priority?: <<integer>>
}
----


[discrete]
[[IlmShrinkAction]]
=== IlmShrinkAction

[source,ts,subs=+macros]
----
interface IlmShrinkAction {
  number_of_shards?: <<integer>>
  max_primary_shard_size?: <<ByteSize>>
  allow_write_after_shrink?: boolean
}
----


[discrete]
[[IlmWaitForSnapshotAction]]
=== IlmWaitForSnapshotAction

[source,ts,subs=+macros]
----
interface IlmWaitForSnapshotAction {
  policy: string
}
----


