[[reference-tasks]]
== client.tasks

////////
===========================================================================================================================
||                                                                                                                       ||
||                                                                                                                       ||
||                                                                                                                       ||
||        ██████╗ ███████╗ █████╗ ██████╗ ███╗   ███╗███████╗                                                            ||
||        ██╔══██╗██╔════╝██╔══██╗██╔══██╗████╗ ████║██╔════╝                                                            ||
||        ██████╔╝█████╗  ███████║██║  ██║██╔████╔██║█████╗                                                              ||
||        ██╔══██╗██╔══╝  ██╔══██║██║  ██║██║╚██╔╝██║██╔══╝                                                              ||
||        ██║  ██║███████╗██║  ██║██████╔╝██║ ╚═╝ ██║███████╗                                                            ||
||        ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚═╝     ╚═╝╚══════╝                                                            ||
||                                                                                                                       ||
||                                                                                                                       ||
||    This file is autogenerated, DO NOT send pull requests that changes this file directly.                             ||
||    You should update the script that does the generation, which can be found in:                                      ||
||    https://github.com/elastic/elastic-client-generator-js                                                             ||
||                                                                                                                       ||
||    You can run the script with the following command:                                                                 ||
||       npm run elasticsearch -- --version <version>                                                                    ||
||                                                                                                                       ||
||                                                                                                                       ||
||                                                                                                                       ||
===========================================================================================================================
////////
++++
<style>
.lang-ts a.xref {
  text-decoration: underline !important;
}
</style>
++++


[discrete]
[[client.tasks.cancel]]
== `client.tasks.cancel()`

Cancels a task, if it can be cancelled through an API.

{ref}/tasks.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: TasksCancelRequest, options?: TransportRequestOptions) => Promise<TasksCancelResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface TasksCancelRequest extends <<RequestBase>> {
  task_id?: <<TaskId>>
  actions?: string | string[]
  nodes?: string[]
  parent_task_id?: string
  wait_for_completion?: boolean
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type TasksCancelResponse = <<TasksTaskListResponseBase>>

----


[discrete]
[[client.tasks.get]]
== `client.tasks.get()`

Get task information. Returns information about the tasks currently executing in the cluster.

{ref}/tasks.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: TasksGetRequest, options?: TransportRequestOptions) => Promise<TasksGetResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface TasksGetRequest extends <<RequestBase>> {
  task_id: <<Id>>
  timeout?: <<Duration>>
  wait_for_completion?: boolean
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
interface TasksGetResponse {
  completed: boolean
  task: <<TasksTaskInfo>>
  response?: any
  error?: <<ErrorCause>>
}

----


[discrete]
[[client.tasks.list]]
== `client.tasks.list()`

The task management API returns information about tasks currently executing on one or more nodes in the cluster.

{ref}/tasks.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: TasksListRequest, options?: TransportRequestOptions) => Promise<TasksListResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface TasksListRequest extends <<RequestBase>> {
  actions?: string | string[]
  detailed?: boolean
  group_by?: <<TasksGroupBy>>
  nodes?: <<NodeIds>>
  parent_task_id?: <<Id>>
  master_timeout?: <<Duration>>
  timeout?: <<Duration>>
  wait_for_completion?: boolean
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type TasksListResponse = <<TasksTaskListResponseBase>>

----


