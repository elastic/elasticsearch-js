[[reference-ingest]]
== client.ingest

////////
===========================================================================================================================
||                                                                                                                       ||
||                                                                                                                       ||
||                                                                                                                       ||
||        ██████╗ ███████╗ █████╗ ██████╗ ███╗   ███╗███████╗                                                            ||
||        ██╔══██╗██╔════╝██╔══██╗██╔══██╗████╗ ████║██╔════╝                                                            ||
||        ██████╔╝█████╗  ███████║██║  ██║██╔████╔██║█████╗                                                              ||
||        ██╔══██╗██╔══╝  ██╔══██║██║  ██║██║╚██╔╝██║██╔══╝                                                              ||
||        ██║  ██║███████╗██║  ██║██████╔╝██║ ╚═╝ ██║███████╗                                                            ||
||        ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚═╝     ╚═╝╚══════╝                                                            ||
||                                                                                                                       ||
||                                                                                                                       ||
||    This file is autogenerated, DO NOT send pull requests that changes this file directly.                             ||
||    You should update the script that does the generation, which can be found in:                                      ||
||    https://github.com/elastic/elastic-client-generator-js                                                             ||
||                                                                                                                       ||
||    You can run the script with the following command:                                                                 ||
||       npm run elasticsearch -- --version <version>                                                                    ||
||                                                                                                                       ||
||                                                                                                                       ||
||                                                                                                                       ||
===========================================================================================================================
////////
++++
<style>
.lang-ts a.xref {
  text-decoration: underline !important;
}
</style>
++++


[discrete]
[[client.ingest.deleteGeoipDatabase]]
== `client.ingest.deleteGeoipDatabase()`

Deletes a geoip database configuration.

{ref}/delete-geoip-database-api.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: IngestDeleteGeoipDatabaseRequest, options?: TransportRequestOptions) => Promise<IngestDeleteGeoipDatabaseResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface IngestDeleteGeoipDatabaseRequest extends <<RequestBase>> {
  id: <<Ids>>
  master_timeout?: <<Duration>>
  timeout?: <<Duration>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type IngestDeleteGeoipDatabaseResponse = <<AcknowledgedResponseBase>>

----


[discrete]
[[client.ingest.deletePipeline]]
== `client.ingest.deletePipeline()`

Deletes one or more existing ingest pipeline.

{ref}/delete-pipeline-api.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: IngestDeletePipelineRequest, options?: TransportRequestOptions) => Promise<IngestDeletePipelineResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface IngestDeletePipelineRequest extends <<RequestBase>> {
  id: <<Id>>
  master_timeout?: <<Duration>>
  timeout?: <<Duration>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type IngestDeletePipelineResponse = <<AcknowledgedResponseBase>>

----


[discrete]
[[client.ingest.geoIpStats]]
== `client.ingest.geoIpStats()`

Gets download statistics for GeoIP2 databases used with the geoip processor.

{ref}/geoip-processor.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: IngestGeoIpStatsRequest, options?: TransportRequestOptions) => Promise<IngestGeoIpStatsResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface IngestGeoIpStatsRequest extends <<RequestBase>> {}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
interface IngestGeoIpStatsResponse {
  stats: IngestGeoIpStatsGeoIpDownloadStatistics
  nodes: Record<<<Id>>, IngestGeoIpStatsGeoIpNodeDatabases>
}

----


[discrete]
[[client.ingest.getGeoipDatabase]]
== `client.ingest.getGeoipDatabase()`

Returns information about one or more geoip database configurations.

{ref}/get-geoip-database-api.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: IngestGetGeoipDatabaseRequest, options?: TransportRequestOptions) => Promise<IngestGetGeoipDatabaseResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface IngestGetGeoipDatabaseRequest extends <<RequestBase>> {
  id?: <<Ids>>
  master_timeout?: <<Duration>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
interface IngestGetGeoipDatabaseResponse {
  databases: IngestGetGeoipDatabaseDatabaseConfigurationMetadata[]
}

----


[discrete]
[[client.ingest.getPipeline]]
== `client.ingest.getPipeline()`

Returns information about one or more ingest pipelines. This API returns a local reference of the pipeline.

{ref}/get-pipeline-api.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: IngestGetPipelineRequest, options?: TransportRequestOptions) => Promise<IngestGetPipelineResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface IngestGetPipelineRequest extends <<RequestBase>> {
  id?: <<Id>>
  master_timeout?: <<Duration>>
  summary?: boolean
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type IngestGetPipelineResponse = Record<string, <<IngestPipeline>>>

----


[discrete]
[[client.ingest.processorGrok]]
== `client.ingest.processorGrok()`

Extracts structured fields out of a single text field within a document. You choose which field to extract matched fields from, as well as the grok pattern you expect will match. A grok pattern is like a regular expression that supports aliased expressions that can be reused.

{ref}/grok-processor.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: IngestProcessorGrokRequest, options?: TransportRequestOptions) => Promise<IngestProcessorGrokResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface IngestProcessorGrokRequest extends <<RequestBase>> {}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
interface IngestProcessorGrokResponse {
  patterns: Record<string, string>
}

----


[discrete]
[[client.ingest.putGeoipDatabase]]
== `client.ingest.putGeoipDatabase()`

Returns information about one or more geoip database configurations.

{ref}/put-geoip-database-api.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: IngestPutGeoipDatabaseRequest, options?: TransportRequestOptions) => Promise<IngestPutGeoipDatabaseResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface IngestPutGeoipDatabaseRequest extends <<RequestBase>> {
  id: <<Id>>
  master_timeout?: <<Duration>>
  timeout?: <<Duration>>
  name: <<Name>>
  maxmind: <<IngestMaxmind>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type IngestPutGeoipDatabaseResponse = <<AcknowledgedResponseBase>>

----


[discrete]
[[client.ingest.putPipeline]]
== `client.ingest.putPipeline()`

Creates or updates an ingest pipeline. Changes made using this API take effect immediately.

{ref}/ingest.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: IngestPutPipelineRequest, options?: TransportRequestOptions) => Promise<IngestPutPipelineResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface IngestPutPipelineRequest extends <<RequestBase>> {
  id: <<Id>>
  master_timeout?: <<Duration>>
  timeout?: <<Duration>>
  if_version?: <<VersionNumber>>
  _meta?: <<Metadata>>
  description?: string
  on_failure?: <<IngestProcessorContainer>>[]
  processors?: <<IngestProcessorContainer>>[]
  version?: <<VersionNumber>>
  deprecated?: boolean
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type IngestPutPipelineResponse = <<AcknowledgedResponseBase>>

----


[discrete]
[[client.ingest.simulate]]
== `client.ingest.simulate()`

Executes an ingest pipeline against a set of provided documents.

{ref}/simulate-pipeline-api.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: IngestSimulateRequest, options?: TransportRequestOptions) => Promise<IngestSimulateResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface IngestSimulateRequest extends <<RequestBase>> {
  id?: <<Id>>
  verbose?: boolean
  docs: IngestSimulateDocument[]
  pipeline?: <<IngestPipeline>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
interface IngestSimulateResponse {
  docs: IngestSimulateSimulateDocumentResult[]
}

----


