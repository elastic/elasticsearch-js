[[reference-query_rules]]
== client.queryRules

////////
===========================================================================================================================
||                                                                                                                       ||
||                                                                                                                       ||
||                                                                                                                       ||
||        ██████╗ ███████╗ █████╗ ██████╗ ███╗   ███╗███████╗                                                            ||
||        ██╔══██╗██╔════╝██╔══██╗██╔══██╗████╗ ████║██╔════╝                                                            ||
||        ██████╔╝█████╗  ███████║██║  ██║██╔████╔██║█████╗                                                              ||
||        ██╔══██╗██╔══╝  ██╔══██║██║  ██║██║╚██╔╝██║██╔══╝                                                              ||
||        ██║  ██║███████╗██║  ██║██████╔╝██║ ╚═╝ ██║███████╗                                                            ||
||        ╚═╝  ╚═╝╚══════╝╚═╝  ╚═╝╚═════╝ ╚═╝     ╚═╝╚══════╝                                                            ||
||                                                                                                                       ||
||                                                                                                                       ||
||    This file is autogenerated, DO NOT send pull requests that changes this file directly.                             ||
||    You should update the script that does the generation, which can be found in:                                      ||
||    https://github.com/elastic/elastic-client-generator-js                                                             ||
||                                                                                                                       ||
||    You can run the script with the following command:                                                                 ||
||       npm run elasticsearch -- --version <version>                                                                    ||
||                                                                                                                       ||
||                                                                                                                       ||
||                                                                                                                       ||
===========================================================================================================================
////////
++++
<style>
.lang-ts a.xref {
  text-decoration: underline !important;
}
</style>
++++


[discrete]
[[client.queryRules.deleteRule]]
== `client.queryRules.deleteRule()`

Deletes a query rule within a query ruleset.

{ref}/delete-query-rule.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: QueryRulesDeleteRuleRequest, options?: TransportRequestOptions) => Promise<QueryRulesDeleteRuleResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface QueryRulesDeleteRuleRequest extends <<RequestBase>> {
  ruleset_id: <<Id>>
  rule_id: <<Id>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type QueryRulesDeleteRuleResponse = <<AcknowledgedResponseBase>>

----


[discrete]
[[client.queryRules.deleteRuleset]]
== `client.queryRules.deleteRuleset()`

Deletes a query ruleset.

{ref}/delete-query-ruleset.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: QueryRulesDeleteRulesetRequest, options?: TransportRequestOptions) => Promise<QueryRulesDeleteRulesetResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface QueryRulesDeleteRulesetRequest extends <<RequestBase>> {
  ruleset_id: <<Id>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type QueryRulesDeleteRulesetResponse = <<AcknowledgedResponseBase>>

----


[discrete]
[[client.queryRules.getRule]]
== `client.queryRules.getRule()`

Returns the details about a query rule within a query ruleset

{ref}/get-query-rule.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: QueryRulesGetRuleRequest, options?: TransportRequestOptions) => Promise<QueryRulesGetRuleResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface QueryRulesGetRuleRequest extends <<RequestBase>> {
  ruleset_id: <<Id>>
  rule_id: <<Id>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type QueryRulesGetRuleResponse = <<QueryRulesQueryRule>>

----


[discrete]
[[client.queryRules.getRuleset]]
== `client.queryRules.getRuleset()`

Returns the details about a query ruleset

{ref}/get-query-ruleset.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: QueryRulesGetRulesetRequest, options?: TransportRequestOptions) => Promise<QueryRulesGetRulesetResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface QueryRulesGetRulesetRequest extends <<RequestBase>> {
  ruleset_id: <<Id>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
type QueryRulesGetRulesetResponse = <<QueryRulesQueryRuleset>>

----


[discrete]
[[client.queryRules.listRulesets]]
== `client.queryRules.listRulesets()`

Returns summarized information about existing query rulesets.

{ref}/list-query-rulesets.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: QueryRulesListRulesetsRequest, options?: TransportRequestOptions) => Promise<QueryRulesListRulesetsResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface QueryRulesListRulesetsRequest extends <<RequestBase>> {
  from?: <<integer>>
  size?: <<integer>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
interface QueryRulesListRulesetsResponse {
  count: <<long>>
  results: QueryRulesListRulesetsQueryRulesetListItem[]
}

----


[discrete]
[[client.queryRules.putRule]]
== `client.queryRules.putRule()`

Creates or updates a query rule within a query ruleset.

{ref}/put-query-rule.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: QueryRulesPutRuleRequest, options?: TransportRequestOptions) => Promise<QueryRulesPutRuleResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface QueryRulesPutRuleRequest extends <<RequestBase>> {
  ruleset_id: <<Id>>
  rule_id: <<Id>>
  type: <<QueryRulesQueryRuleType>>
  criteria: <<QueryRulesQueryRuleCriteria>> | <<QueryRulesQueryRuleCriteria>>[]
  actions: <<QueryRulesQueryRuleActions>>
  priority?: <<integer>>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
interface QueryRulesPutRuleResponse {
  result: <<Result>>
}

----


[discrete]
[[client.queryRules.putRuleset]]
== `client.queryRules.putRuleset()`

Creates or updates a query ruleset.

{ref}/put-query-ruleset.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: QueryRulesPutRulesetRequest, options?: TransportRequestOptions) => Promise<QueryRulesPutRulesetResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface QueryRulesPutRulesetRequest extends <<RequestBase>> {
  ruleset_id: <<Id>>
  rules: <<QueryRulesQueryRule>> | <<QueryRulesQueryRule>>[]
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
interface QueryRulesPutRulesetResponse {
  result: <<Result>>
}

----


[discrete]
[[client.queryRules.test]]
== `client.queryRules.test()`

Creates or updates a query ruleset.

{ref}/test-query-ruleset.html[{es} documentation]
[discrete]
=== Function signature

[source,ts]
----
(request: QueryRulesTestRequest, options?: TransportRequestOptions) => Promise<QueryRulesTestResponse>
----

[discrete]
=== Request

[source,ts,subs=+macros]
----
interface QueryRulesTestRequest extends <<RequestBase>> {
  ruleset_id: <<Id>>
  match_criteria: Record<string, any>
}

----


[discrete]
=== Response

[source,ts,subs=+macros]
----
interface QueryRulesTestResponse {
  total_matched_rules: <<integer>>
  matched_rules: QueryRulesTestQueryRulesetMatchedRule[]
}

----


